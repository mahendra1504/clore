[{"C:\\GitClore\\clore\\client\\clore\\src\\index.js":"1","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Register\\Register.js":"2","C:\\GitClore\\clore\\client\\clore\\src\\App.js":"3","C:\\GitClore\\clore\\client\\clore\\src\\reportWebVitals.js":"4","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Aboutus\\AboutUs.js":"5","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Shop\\ShopPage.js":"6","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Contact\\Contact.js":"7","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Cart\\CartPage.js":"8","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Login\\Login.js":"9","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Account\\AccountPage.js":"10","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Admin\\AddProduct.js":"11","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Navabar\\NavbarBoots.js":"12","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Home\\HomePage.js":"13","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Cart\\CartProducts.js":"14","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Cart\\CartModal.js":"15","C:\\GitClore\\clore\\client\\clore\\src\\Components\\UI\\Card.js":"16","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Home\\SliderComponent.js":"17","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Home\\ProductDisplay.js":"18","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Cart\\CartModalProduct.js":"19","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Home\\Product.js":"20"},{"size":1675,"mtime":1665746024477,"results":"21","hashOfConfig":"22"},{"size":5231,"mtime":1665746278144,"results":"23","hashOfConfig":"22"},{"size":316,"mtime":1665411883257,"results":"24","hashOfConfig":"22"},{"size":375,"mtime":1665411883293,"results":"25","hashOfConfig":"22"},{"size":122,"mtime":1665411883268,"results":"26","hashOfConfig":"22"},{"size":1410,"mtime":1665722300909,"results":"27","hashOfConfig":"22"},{"size":920,"mtime":1665411883272,"results":"28","hashOfConfig":"22"},{"size":1030,"mtime":1665411883270,"results":"29","hashOfConfig":"22"},{"size":2639,"mtime":1665722271623,"results":"30","hashOfConfig":"22"},{"size":134,"mtime":1665722271620,"results":"31","hashOfConfig":"22"},{"size":8158,"mtime":1665753836570,"results":"32","hashOfConfig":"22"},{"size":9457,"mtime":1665754951323,"results":"33","hashOfConfig":"22"},{"size":309,"mtime":1665722271621,"results":"34","hashOfConfig":"22"},{"size":591,"mtime":1665411883271,"results":"35","hashOfConfig":"22"},{"size":520,"mtime":1665411883269,"results":"36","hashOfConfig":"22"},{"size":232,"mtime":1665411883280,"results":"37","hashOfConfig":"22"},{"size":2667,"mtime":1665411883275,"results":"38","hashOfConfig":"22"},{"size":659,"mtime":1665411883275,"results":"39","hashOfConfig":"22"},{"size":507,"mtime":1665411883269,"results":"40","hashOfConfig":"22"},{"size":1187,"mtime":1665411883274,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"e5w9u5",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"45"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"45"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"45"},"C:\\GitClore\\clore\\client\\clore\\src\\index.js",[],[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Register\\Register.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\App.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\reportWebVitals.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Aboutus\\AboutUs.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Shop\\ShopPage.js",["112","113"],[],"import React, { useEffect, useState } from 'react'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const [list, setList] = useState([])\r\n\r\n  const getData = async () => {\r\n\r\n    const res = await fetch(\"http://localhost:1337/api/getproduct\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    const productData = await res.json();\r\n    if (res.status === 422 || !productData) {\r\n      console.log(\"error\");\r\n    } else {\r\n      \r\n      setList(productData)\r\n\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getData()\r\n    \r\n  }, [])\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        list.length>0?\r\n\r\n        list.map((item) => {\r\n          return (\r\n            <div>\r\n              name :{item.product_name} || \r\n              selling_price :{item.price} ||\r\n              description :{item.short_desc} ||\r\n              description :{item.long_desc} ||\r\n              product_category : {item.category_id?.category_name} ||\r\n              product_brand : {item.brand_id?.brand_name} ||\r\n              product_brand : {item.sub_category_id?.sub_category_name} ||\r\n              countInStock :{item.qty} ||\r\n              Size :{item.size}  ||\r\n              Color :{item.color} \r\n            </div>\r\n            )\r\n          })\r\n          :\r\n          \"\"\r\n      }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Contact\\Contact.js",["114","115","116","117"],[],"import React, { useState } from \"react\";\r\nimport cartIcon from '../../icons/cart.svg';\r\nimport CartModal from '../Cart/CartModal';\r\nexport default function ShowButtonHover() {\r\n    const [style, setStyle] = useState({ display: 'none' });\r\n    const [modalViewer, setModalViewer] = useState(false);\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"App\">\r\n                <a \r\n                    onMouseEnter={() => setModalViewer(true)}\r\n                    onMouseLeave={() => setModalViewer(false)}>\r\n                    Hover over me!\r\n                </a>\r\n                {modalViewer && (\r\n                    <div>\r\n                        <CartModal/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* <div ><img src={cartIcon} height={30} width={30} />\r\n                <button style={modalViewer}>hello</button>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Cart\\CartPage.js",["118"],[],"import React, { Fragment } from 'react'\r\nimport Card from '../UI/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CartProducts from './CartProducts';\r\nimport Styles from '../../CSS/Cart/CartPage.module.css';\r\nimport cartIcon from '../../icons/cart.svg';\r\nimport NavbarBoots from '../Navabar/NavbarBoots';\r\nconst CartPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <NavbarBoots></NavbarBoots>\r\n      <Card className={Styles.main_container}>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Remove</th>\r\n              <th scope=\"col\">Pics</th>\r\n              <th scope=\"col\">Product</th>\r\n              <th scope=\"col\">Price</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"table-group-divider\">\r\n            <CartProducts />\r\n            <CartProducts />\r\n          </tbody>\r\n        </table>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CartPage","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Login\\Login.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Account\\AccountPage.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Admin\\AddProduct.js",[],[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Navabar\\NavbarBoots.js",["119","120","121","122","123","124","125","126","127","128","129","130","131"],[],"import { Fragment, useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport pic from '../../image/CLORE.png';\r\nimport accountIcon from '../../icons/account.svg';\r\nimport cartIcon from '../../icons/cart.svg';\r\nimport { useNavigate, NavLink } from 'react-router-dom';\r\nimport CartModal from '../Cart/CartModal';\r\nimport '../../CSS/Navbar/Navbar.css';\r\n\r\n\r\nconst NavbarBoots = () => {\r\n    const [modalViewer, setModalViewer] = useState(false);\r\n    const navigater = useNavigate();\r\n    const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n    useEffect(() => {\r\n        setUserId(JSON.parse(localStorage.getItem('usersdatatoken')));\r\n        if (userId) {\r\n            setIsUserLoggedIn(true);\r\n            console.log(\"User Is logged in successfully\");\r\n        }\r\n    }, [isUserLoggedIn, userId]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {isUserLoggedIn &&\r\n                <nav className=\"navbar navbar-expand-lg bg-light p-2\">\r\n                    <div className=\"container-fluid\">\r\n                        {/* <a className=\"navbar-brand\" href=\"#\">Navbar</a> */}\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <form className=\"d-flex w-25 mt-0\" role=\"search\">\r\n                                <input className=\"form-control rounded-pill\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                <button className=\"invisible\" type=\"submit\"></button>\r\n                            </form>\r\n                            <div className=\"invisible\">\r\n                                <p>&nbsp .</p>\r\n                            </div>\r\n                            <ul className=\"navbar-nav my-auto mt-2\">\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <NavLink className=\"nav-link text-dark mx-2\" aria-current=\"page\" to={\"/\"}>Home</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    {/* <a className=\"nav-link text-dark\" onClick={()=>navigater(\"About\")} >About</a> */}\r\n                                    <NavLink className=\"nav-link text-dark mx-2\" to={\"About\"}><a >About</a></NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <a className=\"nav-link text-dark mx-2\" href=\"/Shop\">Shop</a>\r\n                                </li>\r\n                                <li className=\"nav-item mb-2\">\r\n                                    <NavLink className=\"nav-link\" to={\"/\"}><img src={pic} height={40} width={80} /></NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <a className=\"nav-link text-dark mx-2\" href=\"#\">Pages</a>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <a className=\"nav-link text-dark mx-2\" href=\"#\">Category</a>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <NavLink className=\"nav-link text-dark mx-2\" to={\"Contact\"}>Contact</NavLink>\r\n                                </li>\r\n                            </ul>\r\n                            <div className='navbar-nav ms-auto'>\r\n\r\n                                {/* <NavLink to={\"Cart\"}><a className='nav-link px-3' \r\n                                onMouseEnter={() => setModalViewer(true)}\r\n                                onMouseLeave={() => setModalViewer(false)}\r\n                            ><img src={cartIcon} height={30} width={30}/></a>\r\n                            {modalViewer && (<div><CartModal/></div>)}</NavLink> */}\r\n\r\n                                {/* <NavLink to={\"Cart\"}><a className='nav-link px-3'><img src={cartIcon} height={30} width={30}/></a></NavLink> */}\r\n                                <div\r\n                                    onMouseEnter={() => setModalViewer(true)}\r\n                                    onMouseLeave={() => setModalViewer(false)}>\r\n                                    <div class={\"dropdown-menu-nav-bar\"}>\r\n                                        <NavLink to={\"/Cart\"} className='nav-link px-3'>\r\n                                            <img src={cartIcon} height={30} width={30} />\r\n                                        </NavLink>\r\n                                        {<div class=\"dropdown-links\">\r\n                                            <ul class=\"dropdown-lists\">\r\n                                                <li><CartModal /></li>\r\n                                            </ul>\r\n                                        </div>}\r\n                                    </div>\r\n                                </div>\r\n                                <NavLink to={\"/Account\"} ><a className='nav-link px-3'><img src={accountIcon} height={30} width={30} /></a></NavLink>\r\n                                {/* <NavLink onClick={} ><a className='nav-link px-3'><img src={accountIcon} height={30} width={30} /></a></NavLink> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>}\r\n            {!isUserLoggedIn &&\r\n                <nav className=\"navbar navbar-expand-lg bg-light p-2\">\r\n                    <div className=\"container-fluid\">\r\n                        {/* <a className=\"navbar-brand\" href=\"#\">Navbar</a> */}\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <form className=\"d-flex w-25 mt-0\" role=\"search\">\r\n                                <input className=\"form-control rounded-pill\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                <button className=\"invisible\" type=\"submit\"></button>\r\n                            </form>\r\n                            <div className=\"invisible\">\r\n                                <p>&nbsp .</p>\r\n                            </div>\r\n                            <ul className=\"navbar-nav my-auto mt-2\">\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <NavLink className=\"nav-link text-dark mx-2\" aria-current=\"page\" to={\"/\"}>Home</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    {/* <a className=\"nav-link text-dark\" onClick={()=>navigater(\"About\")} >About</a> */}\r\n                                    <NavLink className=\"nav-link text-dark mx-2\" to={\"About\"}><a >About</a></NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <a className=\"nav-link text-dark mx-2\" href=\"/Shop\">Shop</a>\r\n                                </li>\r\n                                <li className=\"nav-item mb-2\">\r\n                                    <NavLink className=\"nav-link\" to={\"/\"}><img src={pic} height={40} width={80} /></NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <a className=\"nav-link text-dark mx-2\" href=\"#\">Pages</a>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <a className=\"nav-link text-dark mx-2\" href=\"#\">Category</a>\r\n                                </li>\r\n                                <li className=\"nav-item mt-2\">\r\n                                    <NavLink className=\"nav-link text-dark mx-2\" to={\"Contact\"}>Contact</NavLink>\r\n                                </li>\r\n                            </ul>\r\n                            <div className='navbar-nav ms-auto'>\r\n\r\n                                <NavLink className=\"nav-link text-dark mx-2\" to={\"/Register\"}>Sign Up</NavLink>\r\n                                <NavLink className=\"nav-link text-dark mx-2\" to={\"/Login\"}>Login</NavLink>\r\n                                {/* <NavLink to={\"Login\"} ><a className='nav-link px-3'><img src={accountIcon} height={30} width={30} /></a></NavLink> */}\r\n                                {/* <NavLink onClick={} ><a className='nav-link px-3'><img src={accountIcon} height={30} width={30} /></a></NavLink> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            }\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NavbarBoots;","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Home\\HomePage.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Cart\\CartProducts.js",["132"],[],"import React, { Fragment } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport cartIcon from '../../icons/cart.svg';\r\n\r\n\r\nconst CartProducts = (props) => {\r\n    return (\r\n        <Fragment>\r\n\r\n            <tr>\r\n                <th scope=\"row\">1</th>\r\n                <td><img src={cartIcon} height={100} width={150}></img></td>\r\n                <td>T shitrs</td>\r\n                <td>500</td>\r\n                <td><input type={\"number\"} width={20}></input></td>\r\n                <td>500</td>\r\n\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CartProducts","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Cart\\CartModal.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\UI\\Card.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Home\\SliderComponent.js",["133","134","135","136","137","138","139","140","141","142","143","144"],[],"import React, { Fragment } from 'react';\r\nimport '../../CSS/Home/SliderComponent.css';\r\nimport slide1 from '../../image/slide-1.jpg';\r\nimport slide2 from '../../image/slide-2.jpg';\r\nimport slide3 from '../../image/slide-3.jpg';\r\nimport slide4 from '../../image/slide-4.jpg';\r\n\r\n\r\nexport const SliderComponent = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"slider-container\">\r\n                <div className=\"slider\">\r\n                    <div className=\"slides\">\r\n                        <div id=\"slides__1\" className=\"slide\">\r\n                            <span className='image_text'> Great Lookbook 2K22 </span>\r\n                            <img src={slide1} className=\"slider_image\" />\r\n                            <a className=\"slide__prev\" href=\"#slides__4\" title=\"Next\"></a>\r\n                            <a className=\"slide__next\" href=\"#slides__2\" title=\"Next\"></a>\r\n                        </div>\r\n                        <div id=\"slides__2\" className=\"slide\">\r\n                            <span className='image_text'> Stylish Coats </span>\r\n                            <img src={slide2} className=\"slider_image\" />\r\n                            <a className=\"slide__prev\" href=\"#slides__1\" title=\"Prev\"></a>\r\n                            <a className=\"slide__next\" href=\"#slides__3\" title=\"Next\"></a>\r\n                        </div>\r\n                        <div id=\"slides__3\" className=\"slide\">\r\n                            <span className='image_text'>Trendy Collection</span>\r\n                            <img src={slide3} className=\"slider_image\" />\r\n                            <a className=\"slide__prev\" href=\"#slides__2\" title=\"Prev\"></a>\r\n                            <a className=\"slide__next\" href=\"#slides__4\" title=\"Next\"></a>\r\n                        </div>\r\n                        <div id=\"slides__4\" className=\"slide\">\r\n                            <img src={slide4} className=\"slider_image\" />\r\n                            <a className=\"slide__prev\" href=\"#slides__3\" title=\"Prev\"></a>\r\n                            <a className=\"slide__next\" href=\"#slides__1\" title=\"Prev\"></a>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"slider__nav\">\r\n                        <a className=\"slider__navlink\" href=\"#slides__1\"></a>\r\n                        <a className=\"slider__navlink\" href=\"#slides__2\"></a>\r\n                        <a className=\"slider__navlink\" href=\"#slides__3\"></a>\r\n                        <a className=\"slider__navlink\" href=\"#slides__4\"></a>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Home\\ProductDisplay.js",[],[],"C:\\GitClore\\clore\\client\\clore\\src\\Components\\Cart\\CartModalProduct.js",["145"],[],"import React,{Fragment} from 'react'\r\n\r\nconst CartModalProduct = () => {\r\n  return (\r\n    <Fragment>\r\n        <tr>\r\n            <td>\r\n                <img src={process.env.PUBLIC_URL+\"images/slide-1.jpg\"} height={75} width={150}/>\r\n            </td>\r\n            <td>    \r\n                Product Name\r\n                <br/>\r\n                Qty\r\n                <br/>\r\n                Product Price\r\n            </td>\r\n            \r\n        </tr>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CartModalProduct","C:\\GitClore\\clore\\client\\clore\\src\\Components\\Home\\Product.js",["146","147","148"],[],"import React, { Fragment } from 'react';\r\nimport {HiOutlineShoppingCart} from 'react-icons/hi';\r\n\r\nimport { BsHandbag, BsEye } from 'react-icons/bs';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Product = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card m-4\" style={{ width: '18rem' }}>\r\n                <img src={process.env.PUBLIC_URL + \"images/\" + props.imageName} className=\"card-img-top\" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Jeans</h5>\r\n                    <h6>{props.imageName}</h6>\r\n                    <p className=\"card-text\">Short description for the product in about 100 letters</p>\r\n                    <div className=\"w-75 mx-auto\">\r\n                        <a href=\"#\" className=\"btn btn-outline-warning mx-2\"><HiOutlineShoppingCart /></a>\r\n                        <a href=\"#\" className=\"btn btn-outline-success mx-2\"><BsEye /></a>\r\n                        <a href=\"#\" className=\"btn btn-outline-primary mx-2\"><BsHandbag /></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Product",{"ruleId":"149","severity":1,"message":"150","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"149","severity":1,"message":"153","line":2,"column":19,"nodeType":"151","messageId":"152","endLine":2,"endColumn":30},{"ruleId":"149","severity":1,"message":"154","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":16},{"ruleId":"149","severity":1,"message":"155","line":5,"column":12,"nodeType":"151","messageId":"152","endLine":5,"endColumn":17},{"ruleId":"149","severity":1,"message":"156","line":5,"column":19,"nodeType":"151","messageId":"152","endLine":5,"endColumn":27},{"ruleId":"157","severity":1,"message":"158","line":11,"column":17,"nodeType":"159","endLine":13,"endColumn":64},{"ruleId":"149","severity":1,"message":"154","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":16},{"ruleId":"149","severity":1,"message":"160","line":12,"column":12,"nodeType":"151","messageId":"152","endLine":12,"endColumn":23},{"ruleId":"149","severity":1,"message":"161","line":13,"column":11,"nodeType":"151","messageId":"152","endLine":13,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":47,"column":95,"nodeType":"159","endLine":47,"endColumn":99},{"ruleId":"162","severity":1,"message":"163","line":53,"column":76,"nodeType":"159","endLine":53,"endColumn":116},{"ruleId":"157","severity":1,"message":"164","line":56,"column":37,"nodeType":"159","endLine":56,"endColumn":85},{"ruleId":"157","severity":1,"message":"164","line":59,"column":37,"nodeType":"159","endLine":59,"endColumn":85},{"ruleId":"162","severity":1,"message":"163","line":79,"column":45,"nodeType":"159","endLine":79,"endColumn":90},{"ruleId":"157","severity":1,"message":"158","line":88,"column":59,"nodeType":"159","endLine":88,"endColumn":88},{"ruleId":"162","severity":1,"message":"163","line":88,"column":88,"nodeType":"159","endLine":88,"endColumn":136},{"ruleId":"157","severity":1,"message":"158","line":116,"column":95,"nodeType":"159","endLine":116,"endColumn":99},{"ruleId":"162","severity":1,"message":"163","line":122,"column":76,"nodeType":"159","endLine":122,"endColumn":116},{"ruleId":"157","severity":1,"message":"164","line":125,"column":37,"nodeType":"159","endLine":125,"endColumn":85},{"ruleId":"157","severity":1,"message":"164","line":128,"column":37,"nodeType":"159","endLine":128,"endColumn":85},{"ruleId":"162","severity":1,"message":"163","line":12,"column":21,"nodeType":"159","endLine":12,"endColumn":66},{"ruleId":"162","severity":1,"message":"163","line":17,"column":29,"nodeType":"159","endLine":17,"endColumn":74},{"ruleId":"165","severity":1,"message":"166","line":18,"column":29,"nodeType":"159","endLine":18,"endColumn":87},{"ruleId":"165","severity":1,"message":"166","line":19,"column":29,"nodeType":"159","endLine":19,"endColumn":87},{"ruleId":"162","severity":1,"message":"163","line":23,"column":29,"nodeType":"159","endLine":23,"endColumn":74},{"ruleId":"165","severity":1,"message":"166","line":24,"column":29,"nodeType":"159","endLine":24,"endColumn":87},{"ruleId":"165","severity":1,"message":"166","line":25,"column":29,"nodeType":"159","endLine":25,"endColumn":87},{"ruleId":"162","severity":1,"message":"163","line":29,"column":29,"nodeType":"159","endLine":29,"endColumn":74},{"ruleId":"165","severity":1,"message":"166","line":30,"column":29,"nodeType":"159","endLine":30,"endColumn":87},{"ruleId":"165","severity":1,"message":"166","line":31,"column":29,"nodeType":"159","endLine":31,"endColumn":87},{"ruleId":"162","severity":1,"message":"163","line":34,"column":29,"nodeType":"159","endLine":34,"endColumn":74},{"ruleId":"165","severity":1,"message":"166","line":35,"column":29,"nodeType":"159","endLine":35,"endColumn":87},{"ruleId":"165","severity":1,"message":"166","line":36,"column":29,"nodeType":"159","endLine":36,"endColumn":87},{"ruleId":"162","severity":1,"message":"163","line":8,"column":17,"nodeType":"159","endLine":8,"endColumn":97},{"ruleId":"157","severity":1,"message":"164","line":18,"column":25,"nodeType":"159","endLine":18,"endColumn":78},{"ruleId":"157","severity":1,"message":"164","line":19,"column":25,"nodeType":"159","endLine":19,"endColumn":78},{"ruleId":"157","severity":1,"message":"164","line":20,"column":25,"nodeType":"159","endLine":20,"endColumn":78},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'cartIcon' is defined but never used.","'style' is assigned a value but never used.","'setStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'modalViewer' is assigned a value but never used.","'navigater' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader."]